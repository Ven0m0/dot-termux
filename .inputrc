# /etc/inputrc - global inputrc for libreadline
# See readline(3readline) and 'info rluserman' for more information.
# Credit to:
# https://github.com/dotphiles/dotphiles/blob/master/input/inputrc
# https://github.com/Rudxain/dotfiles
# https://www.gnu.org/software/bash/manual/html_node/Command-Line-Editing.html

# $include /etc/inputrc

# UTF-8 support
set input-meta on
set output-meta on
set convert-meta off

# Misc
set enable-keypad on
set enable-bracketed-paste off
set echo-control-characters off
set blink-matching-paren on
set bind-tty-special-chars off

# Tab completions:
set menu-complete-display-prefix on
set show-all-if-ambiguous on
set show-all-if-unmodified on
set skip-completed-text on
set completion-map-case on
set completion-ignore-case on
set completion-query-items 200
set completion-prefix-display-length 2
set mark-symlinked-directories on
set mark-directories on
set match-hidden-files off 
set page-completions off
set colored-completion-prefix on
set colored-stats on
set bell-style none
set prefer-visible-bell
set show-mode-in-prompt on
set emacs-mode-string "(e) "
set vi-ins-mode-string "(i) " 
set vi-cmd-mode-string "(c) "

# https://wiki.archlinux.org/index.php/Home_and_End_keys_not_working
# Standard key mappings
"\e[1~": beginning-of-line
"\e[4~": end-of-line
"\e[2~": quoted-insert
"\e[3~": delete-char
"\e[5~": beginning-of-history
"\e[6~": end-of-history
"\e[7~": beginning-of-line
"\e[8~": end-of-line
"\eOH": beginning-of-line
"\eOF": end-of-line
"\e[H": beginning-of-line
"\e[F": end-of-line

# smart up/down, pgup,pgdown to start/end
"\e[A": history-search-backward
"\e[B": history-search-forward
# Ctrl+arrow keys for word movement
"\e[5C": forward-word
"\e[5D": backward-word
"\e\e[C": forward-word
"\e\e[D": backward-word
"\e[1;5C": forward-word
"\e[1;5D": backward-word

# allow the use of the Delete/Insert keys
"\e[2~": quoted-insert
"\e[3~": delete-char

$if Bash
	# do history expansion when space entered
	Space: magic-space
	# Ctrl+Alt+l appends '| less' to the line and runs it
	"\e\C-l": "\C-e | less\C-m"
	# Insert quotes around current/previous word: Ctrl+X -> q
	"\C-xq": "\eb\"\ef\""
	# Add a binding to refresh the line, which is unbound
	"\C-xr": redraw-current-line
	# turn $VAR into its value
	"\M-\C-v": "\C-a\C-k$\C-y\M-\C-e\C-a\C-y="
	# send a command in the background with Ctrl+Alt+b, discarding all of its output
	"\e\C-b": "\C-e > /dev/null 2>&1 &\C-m"
	### Fish like tab completions in Bash
	"\t": menu-complete
	"\e[Z": menu-complete-backward
$endif

$if mode=vi
    set keymap vi-command
    # These are for vi-command mode
    Control-l: clear-screen
    set keymap vi-insert
    # These are for vi-insert mode
    Control-l: clear-screen
$endif
